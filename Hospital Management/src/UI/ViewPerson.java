/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI;

import Patient.Patient;
import Patient.PatientDirectory;
import SQLConnection.SQLConnection;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author BARATHI
 */
public class ViewPerson extends javax.swing.JFrame {

    /**
     * Creates new form ViewPerson
     */
    String community;
     PatientDirectory pd;
     int i;
    public ViewPerson(String community) {
        initComponents();
        setDefaultCloseOperation(AddVitals.DISPOSE_ON_CLOSE);
        pd=new PatientDirectory();
        pd.getDbCommunityPatientDirectory(community);
        this.community=community;
        i =1;
        System.out.print(community);
        populateTable();
    }
    public ViewPerson() {
     initComponents();
     setDefaultCloseOperation(AddVitals.DISPOSE_ON_CLOSE);
        pd=new PatientDirectory();
        pd.getDbPatientDirectory();
        this.community=community;
        i =0;
        System.out.print(community);
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblPatients = new javax.swing.JTable();
        btnEdit1 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        txtAddNewPatient = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Manage Patients");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        tblPatients.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Age", "Gender", "Residence", "City", "Community", "Patient ID", "Appointment Booked with", "Object"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, true, true, true, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblPatients);

        btnEdit1.setBackground(new java.awt.Color(102, 102, 102));
        btnEdit1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnEdit1.setForeground(new java.awt.Color(255, 255, 255));
        btnEdit1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/edit.png"))); // NOI18N
        btnEdit1.setText("Edit Patient");
        btnEdit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEdit1ActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(102, 102, 102));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/refresh.png"))); // NOI18N
        jButton1.setText("Refresh");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txtAddNewPatient.setBackground(new java.awt.Color(102, 102, 102));
        txtAddNewPatient.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtAddNewPatient.setForeground(new java.awt.Color(255, 255, 255));
        txtAddNewPatient.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/add (3).png"))); // NOI18N
        txtAddNewPatient.setText("Add New Patient");
        txtAddNewPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddNewPatientActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(102, 102, 102));
        btnDelete.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/delete (2).png"))); // NOI18N
        btnDelete.setText("Delete Patient");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 703, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addComponent(txtAddNewPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnEdit1)
                .addGap(18, 18, 18)
                .addComponent(btnDelete)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEdit1)
                    .addComponent(jButton1)
                    .addComponent(txtAddNewPatient)
                    .addComponent(btnDelete))
                .addContainerGap(119, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnDelete, btnEdit1, jButton1, txtAddNewPatient});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_formWindowOpened

    private void btnEdit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEdit1ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblPatients.getSelectedRow();
        System.out.print("Inside edit");

        if(selectedRowIndex<0)
        {
            JOptionPane.showMessageDialog(this, "Select a row to Edit it.");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblPatients.getModel();
        Patient selectedPatient = (Patient) model.getValueAt(selectedRowIndex, 8);
        int PatientId=selectedPatient.getPatientID();
        EditPatient ep=new EditPatient(pd,selectedPatient,PatientId);
        ep.setVisible(true);
    }//GEN-LAST:event_btnEdit1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        pd=new PatientDirectory();
        if (i==1)
        {
         pd.getDbCommunityPatientDirectory(community);
        }
        else
        {
            pd.getPatientDirectory();
        }
        populateTable();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtAddNewPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddNewPatientActionPerformed
        // TODO add your handling code here:
        Registration rs=new Registration(0);
        rs.setVisible(true);
        //MainScreen topFrame = (MainScreen) SwingUtilities.getWindowAncestor(this);
       // topFrame.dispose();
        //topFrame.setVisible(false);
    }//GEN-LAST:event_txtAddNewPatientActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        try {
            // TODO add your handling code here:
            int selectedRowIndex = tblPatients.getSelectedRow();
            
            if(selectedRowIndex<0)
            {
                JOptionPane.showMessageDialog(this, "Select a Patient to delete it.");
                return;
            }
            DefaultTableModel model = (DefaultTableModel) tblPatients.getModel();
            Patient selectedPatient = (Patient) model.getValueAt(selectedRowIndex, 8);
            
            pd.deletePatient(selectedPatient);
            
            JOptionPane.showMessageDialog(this, "Selected Patient was deleted.");
            Connection con=SQLConnection.dbconnector();
            int id=selectedPatient.getPatientID();
            String sql="delete from Patient where PatientID='"+id+"';";
            PreparedStatement ps=con.prepareStatement(sql);
            ps.executeUpdate();
            populateTable();
        } catch (SQLException ex) {
            Logger.getLogger(ViewPerson.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed

    }//GEN-LAST:event_formWindowClosed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewPerson.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewPerson.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewPerson.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewPerson.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit1;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPatients;
    private javax.swing.JButton txtAddNewPatient;
    // End of variables declaration//GEN-END:variables
public void populateTable()
    {
         
         DefaultTableModel model=(DefaultTableModel) tblPatients.getModel();
        model.setRowCount(0);
       // System.out.println("Inside populate");
       // System.out.print(pd);
        for(Patient p: pd.getPatientDirectory())
        {
            //System.out.println("Inside loop");
             //System.out.println(p.getName());
             Object[] row=new Object[9];
             row[8]=p;
             row[0]=p.getName();
             row[1]=p.getAge();
             row[2]=p.getGender();
             row[3]=p.getResidence();
             System.out.println(p.getResidence());
             row[4]=p.getCity();
             row[5]=p.getCommunity();
             row[6]=p.getPatientID();
             row[7]=p.getDoctor();
             
             
             model.addRow(row);
        }
}
}

